map $http_origin $cors_origin_header {
    default "";
    # Examples
    # "~(^|^http:\/\/)(localhost$|localhost:[0-9]{1,4}$)" "$http_origin";
    # "~^https://test-.-dev.example.pl$" "$http_origin"; # https://test-7-dev.example.pl
    # "https://test.example.com" "$http_origin";
    "http://cooking-assistant.local:3001" "$http_origin";
}

map $http_origin $cors_cred {
    default "";
    # "~(^|^http:\/\/)(localhost$|localhost:[0-9]{1,4}$)" "true";
    # "~^https://test-.-dev.example.pl$" "true"; # https://test-7-dev.example.pl
    # "https://test.example.com" "true";
    "http://cooking-assistant.local:3001" "true";
}

server {
    listen 80;
    # HTTPS
    # listen 443 ssl http2;
    # include ssl/wildcard;
    index index.php;

	server_name cooking-assistant.local;
    root /var/www/app/public;

    error_log /var/log/nginx/project_error.log;
    access_log /var/log/nginx/project_access.log;

    add_header Access-Control-Allow-Origin $cors_origin_header always;
    add_header Access-Control-Allow-Credentials $cors_cred;
    add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
    add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";

    if ($request_method = 'OPTIONS' ) {
      return 204 no-content;
    }

    location / {
        try_files $uri /index.php$is_args$args;
    }

    # add_header Access-Control-Allow-Origin "http://cooking-assistant.local:3001";
    location ~ ^/index\\.php(/|$) {
        #
        # CORS header support
        #
        # One way to use this is by placing it into a file called "cors_support"
        # under your Nginx configuration directory and placing the following
        # statement inside your **location** block(s):
        #
        #   include cors_support;
        #
        # As of Nginx 1.7.5, add_header supports an "always" parameter which
        # allows CORS to work if the backend returns 4xx or 5xx status code.
        #
        # For more information on CORS, please see: http://enable-cors.org/
        # Forked from this Gist: https://gist.github.com/michiel/1064640
        #

        fastcgi_pass php:9000;
        fastcgi_split_path_info ^(.+\\.php)(/.*)$;
        include fastcgi_params;

        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;

        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;

        internal;
    }

    location ~ \\.php$ {
        return 404;
    }
}